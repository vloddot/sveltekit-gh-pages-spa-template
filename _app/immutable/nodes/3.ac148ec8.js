import{s as j,n as x,e as T}from"../chunks/scheduler.e108d1fd.js";import{S as C,i as M,g as f,m as h,s as P,h as _,j as q,n as g,f as r,c as H,y as S,a as u,x as v,o as w}from"../chunks/index.c5af3f48.js";import{p as G}from"../chunks/stores.bb35fd12.js";const K=!1,E=Object.freeze(Object.defineProperty({__proto__:null,prerender:K},Symbol.toStringTag,{value:"Module"}));function L(o){let a,p,s=o[0].id+"",n,c,d,i,y=`Since this route is &quot;dynamic&quot; and isn&#39;t pre-rendered, a normal SvelteKit app
  on GitHub Pages should return a 404. But what happens is that the
  <code>src/404.html</code> file gets picked up by GitHub Pages which is also
  coincidentally what the app&#39;s HTML template for SvelteKit due to changing
  <code>config.files.appTemplate</code> in <code>svelte.config.js</code>
  so GitHub Pages just simply relaunches the SvelteKit router.`,m,l,b="Try refreshing the page.";return{c(){a=f("p"),p=h("Hello, "),n=h(s),c=h("!"),d=P(),i=f("p"),i.innerHTML=y,m=P(),l=f("p"),l.textContent=b},l(e){a=_(e,"P",{});var t=q(a);p=g(t,"Hello, "),n=g(t,s),c=g(t,"!"),t.forEach(r),d=H(e),i=_(e,"P",{"data-svelte-h":!0}),S(i)!=="svelte-uk59ja"&&(i.innerHTML=y),m=H(e),l=_(e,"P",{"data-svelte-h":!0}),S(l)!=="svelte-120m2ja"&&(l.textContent=b)},m(e,t){u(e,a,t),v(a,p),v(a,n),v(a,c),u(e,d,t),u(e,i,t),u(e,m,t),u(e,l,t)},p(e,[t]){t&1&&s!==(s=e[0].id+"")&&w(n,s)},i:x,o:x,d(e){e&&(r(a),r(d),r(i),r(m),r(l))}}}function k(o,a,p){let s,n;return T(o,G,c=>p(1,n=c)),o.$$.update=()=>{o.$$.dirty&2&&p(0,s=n.params)},[s,n]}class $ extends C{constructor(a){super(),M(this,a,k,L,j,{})}}export{$ as component,E as universal};
