import{s as H,n as v,e as C}from"../chunks/scheduler.e108d1fd.js";import{S,i as j,s as x,g as m,c as P,h as _,y as b,a as d,f as u,m as h,j as k,n as g,x as y,o as T}from"../chunks/index.c5af3f48.js";import{p as q}from"../chunks/stores.ce46e871.js";const w=!1,D=Object.freeze(Object.defineProperty({__proto__:null,prerender:w},Symbol.toStringTag,{value:"Module"}));function L(r){let e,n,a=r[0].id+"",l,s;return{c(){e=m("p"),n=h("Hello, "),l=h(a),s=h("!")},l(p){e=_(p,"P",{});var o=k(e);n=g(o,"Hello, "),l=g(o,a),s=g(o,"!"),o.forEach(u)},m(p,o){d(p,e,o),y(e,n),y(e,l),y(e,s)},p(p,o){o&1&&a!==(a=p[0].id+"")&&T(l,a)},d(p){p&&u(e)}}}function M(r){let e,n="Hello... whoops, no ID";return{c(){e=m("p"),e.textContent=n},l(a){e=_(a,"P",{"data-svelte-h":!0}),b(e)!=="svelte-ljd2mq"&&(e.textContent=n)},m(a,l){d(a,e,l)},p:v,d(a){a&&u(e)}}}function G(r){let e,n,a=`Since this route is &quot;dynamic&quot; and isn&#39;t pre-rendered, a normal SvelteKit app
  on GitHub Pages should return a 404. But what happens is that the
  <code>src/404.html</code> file gets picked up by GitHub Pages which is also
  coincidentally what the app&#39;s HTML template for SvelteKit due to changing
  <code>config.kit.files.appTemplate</code> in <code>svelte.config.js</code>
  so GitHub Pages just simply relaunches the SvelteKit router.`,l,s,p="Try refreshing the page or going to the URL directly.";function o(t,c){return t[0].id==null?M:L}let f=o(r),i=f(r);return{c(){i.c(),e=x(),n=m("p"),n.innerHTML=a,l=x(),s=m("p"),s.textContent=p},l(t){i.l(t),e=P(t),n=_(t,"P",{"data-svelte-h":!0}),b(n)!=="svelte-10sg41g"&&(n.innerHTML=a),l=P(t),s=_(t,"P",{"data-svelte-h":!0}),b(s)!=="svelte-j9fx1y"&&(s.textContent=p)},m(t,c){i.m(t,c),d(t,e,c),d(t,n,c),d(t,l,c),d(t,s,c)},p(t,[c]){f===(f=o(t))&&i?i.p(t,c):(i.d(1),i=f(t),i&&(i.c(),i.m(e.parentNode,e)))},i:v,o:v,d(t){t&&(u(e),u(n),u(l),u(s)),i.d(t)}}}function K(r,e,n){let a,l;return C(r,q,s=>n(1,l=s)),r.$$.update=()=>{r.$$.dirty&2&&n(0,a=l.params)},[a,l]}class E extends S{constructor(e){super(),j(this,e,K,G,H,{})}}export{E as component,D as universal};
